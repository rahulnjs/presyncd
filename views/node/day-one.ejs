<%- include('../header') %>
<%- include('../hitachi-hfr') %>
<div class="reveal">
	<div class="slides">
		<section>
			<img src="/ncg/img/node-logo.png" class="cimg" style="width: 350px;">
			<h3>NodeJS</h3>
			<h5>A JavaScript runtime built on Chrome's V8 engine</h5>
			<p>
				<small>By <a href="#">Rahul Sharma</a></small>
			</p>
		</section>

		<section>
			<h3>Who created NodeJS?</h3>
			<p class="fragment">
				<img src="/ncg/img/ryan.jpg" class="cimg" style="border-radius: 5px;">
			</p>
			<p class="fragment">Ryan Dahl</p>
			<p class="fragment"><small>in 2009</small></p>
		</section>

		<section>
			<section data-background-iframe="/ncg/html/node-history.html" data-background-interactive> </section>
		</section>

		<section>
			<h4>So what is Node JS?</h4>
			<p class="fragment">
				A JavaScript runtime!<br>
				<img src="/ncg/img/runtime-node.gif" class="cimg" style="width: 550px; height: 270px">
			</p>
			<p class="fragment">
				<small>That's it.</small>
			</p>
		</section>

		<section class="has-many-ps" style="text-align: left">
			<h4><em>Node</em> characteristics,</h4>
			<p class="fragment">
				&#10024; <em>Single Threaded</em>
			</p>
			<p class="fragment">
				&#10024; <em>Event Driven</em>
			</p>
			<p class="fragment">
				&#10024; <em>Non Blocking I/O</em>
			</p>
		</section>
		
		<section class="has-many-ps" style="text-align: left">
			<h4><em>Node</em> Misconceptions,</h4>
			<p class="fragment">
				&#10024; <em><strike>NodeJS is a web server</strike></em>
			</p>
			<p class="fragment">
				&#10024; <em><strike>NodeJS is a framework</strike></em>
			</p>
			<p class="fragment">
				&#10024; <em><strike>NodeJS is written in JavaScript</strike></em>
			</p>
		</section>

		<section>
			<section>
				<h4><em>Node</em> Architecture</h4>
				<img src="/ncg/img/arch.png" alt="" class="cimg">
			</section>

			<section>
				<h3>What are these?</h3>
				<img src="/ncg/img/v8-libuv.png" alt="" class="cimg">
			</section>

			<section>
				<h5>Google Chrome's V8 engine</h5>
				<img src="/ncg/img/v8-2.png" alt="" class="cimg" style="width: 50%;">
				<br>
				<small>A place where JavaScript runs</small>
			</section>

			<section>
				<img src="/ncg/img/libuv.png" alt="" class="cimg" style="width: 300px; height: 50px;">
				<br>
				<img src="/ncg/img/libuv-1.png" alt="" class="cimg">
				<br>
				<small>A place where async-magic happens: EventLoop</small>
			</section>

			<section>
				<h6>EventLoop</h6>
				<img src="/ncg/img/el.jpeg" alt="" class="cimg" style="width: 80%;">
			</section>

			<section>
				<h4>Event loop in action</h4>
				<p class="fragment">
					<img src="/ncg/img/el-chrome.gif" class="cimg">
				</p>
				
			</section>

		</section>
				
		<section>
			<h3>
				Node Package Manager<br>
			</h3>
			<img src="/ncg/img/npm.png" class="cimg" style="width: 550px; height: 270px">
			<p class="fragment">
				<small>Central repository for node modules</small>
			</p>
		</section>
		<section>
			<h3>
				npm
			</h3>
			<p>
<pre class=""><code class="hljs bash" data-trim data-noescape >
npm init #initialize your node project<p class="fragment">
npm install #install all dependencies</p><p class="fragment">
npm install &lt;package-name&gt; #install a package locally</p><p class="fragment">
npm install &lt;package-name&gt; -g #install a package globally</p><p class="fragment">
npm install &lt;package-name&gt; --save-dev #install Dev dependency	</p></code></pre>
</section>
<section>
	<h3>
		npx
	</h3>
	<p>
<pre class=""><code class="hljs bash" data-trim data-noescape >
#Run node modules without installing it
<p class="fragment">npx cowsay "Hello"</p><p class="fragment">
npx: installed 10 in 6.929s
_______
< Hello >
-------
	\   ^__^
	\  (oo)\_______
	   (__)\       )\/\
	      ||----w |
	      ||     ||</p></code></pre></p>
</section>
	<section>
			<h5>
				<em>Asynchrony</em> in action</h5>
<pre class="code-col"><code class="hljs javascript" data-trim data-noescape >
process.nextTick(function() {
  console.log('process.nextTick 1');
});

fs.writeFile('file.txt',
 'I there', function(err) {
  console.log('Written');
});

setTimeout(function() {
  console.log('setTimeOut 0');
  process.nextTick(() => {
    console.log('proc.nextTick 2');
  });
}, 0);
</code></pre>
<pre class="code-col"><code class="hljs javascript" data-trim data-noescape >
setImmediate(function() {
  console.log('setImmediate');
});
process.nextTick(function() {
  console.log('process.nextTick 3');
});<p class="fragment">//process.nextTick 1
//process.nextTick 3</p><p class="fragment">//setTimeOut 0
//process.nextTick 2</p><p class="fragment">//setImmediate
//Written</p></code></pre></section>
<section>
	<h5>
		<em>module.exports</em></h5>
<pre style="width: 600px;"><code class="hljs javascript" data-trim data-noescape >
//myMod.js
module.exports.print = function(txt) {
console.log(txt);
}

//index.js
const mod = require('myMod');
mod.print('this');
</code></pre>
</section>
<section>
			<h5>
				<em>fs</em> module</h5>
<pre><code class="hljs javascript" data-trim data-noescape >
const fs = require('fs');

fs.writeFile('file.txt', 'I there', function(err) {
  console.log('Written');
});

fs.readFile('file.txt', 'utf8', function(err, data) {
  console.log(data);
});
<p class="fragment">
fs.writeFileSync('file.txt', 'I there');
 
fs.readFileSync('file.txt', 'utf8'); //returns the content
</p>
</code></pre>
</section>
<section>
	<h5>
		<em>events</em> module</h5>
<pre><code class="hljs javascript" data-trim data-noescape >const EventEmitter = require('events')
const eventEmitter = new EventEmitter()<p class="fragment">eventEmitter.on('start', () => {
    console.log('started')
});</p><p class="fragment">eventEmitter.emit('start') //Started</p>
<p class="fragment">eventEmitter.on('start', number => {
  console.log(`started ${number}`);
});
eventEmitter.emit('start', 23); //started 23</p></code></pre></section>
<section>
	<h5>process & global</h5>
<pre><code class="hljs javascript" data-trim data-noescape >
process.argv; //array of command line arguemnts
process.cwd() //current working directory
process.env //Environment variable for current user
process.on('SIGINT', handle); //interrupt Ctrl-C
process.on('uncaughtException', () => { 
	//do some clean up
	process.kill(1);
});

//global is node equivalent of browsers window object
</code></pre></section>
<section>
	<h1>Q&A</h1>
</section>
<section>
	<h2>To be continued...</h2>
</section>

	</div>
</div>
<%- include('../footer')%>